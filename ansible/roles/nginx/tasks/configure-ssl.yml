- name: Check if SSL certificate exists
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ rdns_name }}/fullchain.pem"
  register: ssl_cert

- name: Remove pre-SSL nginx configuration
  ansible.builtin.file:
    path: /etc/nginx/conf.d/photoshare-pre-SSL.conf
    state: absent
  become: true
  when: ssl_cert.stat.exists

- name: Copy photoshare nginx configuration (post-SSL)
  ansible.builtin.template:
    src: /home/dev/Ansible/photoshare/ansible/roles/nginx/files/photoshare-nginx.conf.j2
    dest: /etc/nginx/conf.d/photoshare.conf
    owner: root
    group: root
    mode: "0644"
  become: true
  when: ssl_cert.stat.exists

- name: Create ssl-cert group
  become: true
  ansible.builtin.group:
    name: ssl-cert
    state: present

- name: Add nginx user to ssl-cert group
  become: true
  ansible.builtin.user:
    name: nginx
    groups: ssl-cert
    append: true # Ensures nginx user is not removed from other groups it may be part of.

- name: Change group ownership and permissions of letsencrypt directories
  become: true
  ansible.builtin.file:
    path: "/etc/letsencrypt/{{ item }}"
    owner: root
    group: ssl-cert
    mode: "0750" # rwxr-x---
    recurse: true # Apply the changes recursively
    state: directory # Ensure it's treated as a directory
  loop:
    - live
    - archive

- name: "Set the correct read and execute permissions for ssl-cert group in letsencrypt directories"
  become: true
  ansible.builtin.file:
    path: "/etc/letsencrypt/{{ item }}"
    state: directory
    recurse: true
    mode: "g+rx"
  loop:
    - live
    - archive

# This command does not change state, just checks configuration.

- name: Test Nginx Configuration
  become: true
  ansible.builtin.command: nginx -t
  changed_when: false

- name: Restart Nginx
  become: true
  ansible.builtin.service:
    name: nginx
    state: restarted
