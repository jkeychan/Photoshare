---
# Configure automatic secrets and environment

- name: Remove old secrets file if it exists
  ansible.builtin.file:
    path: /etc/systemd/system/env/photoshare
    state: absent

- name: Copy secret generator script to the target
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/generate_secrets.py"
    dest: /opt/photoshare_venv/generate_secrets.py
    owner: root
    group: root
    mode: "0755"

- name: Generate secrets
  ansible.builtin.command: >
    /usr/bin/env python3 /opt/photoshare_venv/generate_secrets.py "{{ admin_password }}"
  register: secret
  no_log: true
  changed_when: false

- name: Store generated secrets in Ansible facts
  ansible.builtin.set_fact:
    flask_secret_key: "{{ (secret.stdout_lines | default([])) | select('match', '^FLASK_SECRET_KEY=.*$') | map('regex_replace', '^FLASK_SECRET_KEY=(.*)', '\\1') | first | default('') }}"
    flask_wtf_secret_key: "{{ (secret.stdout_lines | default([])) | select('match', '^FLASK_WTF_SECRET_KEY=.*$') | map('regex_replace', '^FLASK_WTF_SECRET_KEY=(.*)', '\\1') | first | default('') }}"
    pshr: "{{ (secret.stdout_lines | default([])) | select('match', '^PSHR=.*$') | map('regex_replace', '^PSHR=(.*)', '\\1') | first | default('') }}"
  no_log: true
  when: secret is defined

- name: Ensure the environment directory exists
  ansible.builtin.file:
    path: /etc/systemd/system/env
    state: directory
    mode: "0755"
  become: true

- name: Fill the template with secrets
  ansible.builtin.template:
    src: "{{ role_path }}/templates/photoshare.j2"
    dest: /etc/systemd/system/env/photoshare
    owner: root
    group: root
    mode: "0600"

- name: Copy the systemd service file
  ansible.builtin.copy:
    src: "{{ role_path }}/files/photoshare.service"
    dest: /etc/systemd/system/photoshare.service
    mode: "0644"

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

# Add application files
- name: Ensure the application directory exists
  ansible.builtin.file:
    path: /mnt/web/photoshare
    state: directory
    owner: nginx
    group: nginx
    mode: "0755"

- name: Deploying application files
  ansible.builtin.copy:
    src: "{{ role_path }}/files/deploy"
    dest: /mnt/web/photoshare/
    owner: nginx
    group: nginx
    mode: "0644"

- name: Ensure the photoshare_logs directory exists
  ansible.builtin.file:
    path: /opt/photoshare_logs
    state: directory
    mode: "0775"
  become: true

- name: Ensure correct ownership for photoshare_logs directory
  ansible.builtin.file:
    path: /opt/photoshare_logs
    owner: j
    group: j
    mode: "0775"
    recurse: true
  become: true

- name: Enable and start photoshare service
  ansible.builtin.systemd:
    name: photoshare
    enabled: true
    state: started
  no_log: true
