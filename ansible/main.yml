- name: Run common setup tasks
  hosts: webapp
  gather_facts: true
  become: true
  vars_prompt:
    - name: admin_password
      prompt: "Enter your administrator password (for the website login)"
      private: true
    - name: letsencrypt_email_input
      prompt: "Enter your email for Let's Encrypt notifications (optional) (leave blank to use admin@your-domain)"
      private: false
      default: ""
    - name: server_ip_input
      prompt: "Enter the server IPv4 Address (leave blank to use the host's default IPv4 address)"
      private: false
      default: ""

  pre_tasks:
    - name: Get Public IPv4 Address via curl
      ansible.builtin.command: "curl -s https://api.ipify.org?format=json"
      register: public_ip_result

    - name: Set Public IP Address
      ansible.builtin.set_fact:
        server_ip: "{{ public_ip_result.stdout | from_json | json_query('ip') }}"

   # - name: Get rDNS name using dig
   #   ansible.builtin.command: "dig +short -x {{ server_ip }}"
   #   register: rdns_name_result
   #   ignore_errors: true
   #   changed_when: false

   # - name: Extract rDNS name from result
   #   ansible.builtin.set_fact:
   #     rdns_name: "{{ rdns_name_result.stdout_lines[0] | regex_replace('\\.$', '') if rdns_name_result.stdout_lines | length > 0 else 'N/A' }}"
   #   when: rdns_name_result is succeeded

    - name: Set default values based on gathered facts if not provided
      ansible.builtin.set_fact:
        letsencrypt_email: "{{ letsencrypt_email_input | default('admin@' + rdns_name | default(rdns_name, true), true) }}"

    - name: Print determined values
      ansible.builtin.debug:
        msg: |
          The determined values are:\n
            Let's Encrypt Email: {{ letsencrypt_email }}\n
            Server IP: {{ server_ip }}\n
            rDNS Name: {{ rdns_name | default('Not available', true) }}\n
          Please confirm these are correct or rerun the playbook with correct inputs.

    - name: Confirm values with the user
      ansible.builtin.pause:
        prompt: "Do these values look OK to proceed? (yes/[enter for default 'yes']/no)"
      register: confirmation_response

    - name: Set confirmation result to 'yes' if user hits enter
      ansible.builtin.set_fact:
        user_confirmation: "{{ 'yes' if confirmation_response.user_input == '' else confirmation_response.user_input | lower }}"

    - name: Debug confirmation result
      ansible.builtin.debug:
        msg: "User confirmed: {{ user_confirmation }}"

    - name: Fail if the user did not confirm
      ansible.builtin.fail:
        msg: "User did not confirm the values. Aborting."
      when: user_confirmation == 'no'

    - name: Debug final domain name
      ansible.builtin.debug:
        msg: "Final domain name: {{ hostvars[inventory_hostname]['rdns_name'] | default('Not available') }}"

  roles:
    - validation
    - common
    - letsencrypt
    - nginx
    - webapp

  post_tasks:
    - name: Add user 'j' to the nginx group
      ansible.builtin.user:
        name: j
        groups: nginx
